// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MemberType {
  Kakao
  Google
  Naver
  Basic
}

model Member {
  id         String     @id @default(uuid())
  name       String     @db.VarChar(255)
  nickname   String     @db.VarChar(255)
  email      String     @db.VarChar(255)
  password   String     @db.VarChar(255)
  tel        String     @db.VarChar(255)
  address    String     @db.VarChar(255)
  subAddress String     @map("sub_address") @db.VarChar(255)
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  deletedAt  DateTime?  @map("deleted_at")
  role       Boolean    @default(false)
  type       MemberType

  product Product[]
}

model Sales {
  id        String    @id @default(uuid())
  name      String    @map("sales_name") @db.VarChar(255)
  desc      String    @map("sales_desc") @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  product Product[]
}

model Product {
  id        String    @id @default(uuid())
  name      String    @map("product_name") @db.VarChar(255)
  price     String    @map("product_price") @db.VarChar(255)
  desc      String    @map("product_desc") @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  Member    Member?   @relation(fields: [memberId], references: [id])
  memberId  String?
  Sales     Sales?    @relation(fields: [salesId], references: [id])
  salesId   String?
}
